@model productmanagementsystems.Models.product

@{
    ViewBag.Title = "addprd";
}


@using (Html.BeginForm())
{

    if (Session["adminname"] != null)
    {
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.images, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.images, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.images, "", new { @class = "text-danger" })
                    </div>
                </div>



            <div class="form-group">
                @Html.LabelFor(model => model.images, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.images, new { htmlAttributes = new { type = "file", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.images, "", new { type = "file", @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
*@
    

    <div class="container">
        <div class="inner">
            <div class="loginboxreg">
                <img src="~/Images/loginicon.png" class="avatar">
                <h1>Product Info.</h1>

                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })


                @Html.LabelFor(model => model.images, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.images, new { htmlAttributes = new { type = "file", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.images, "", new { type = "file", @class = "text-danger" })


                @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })



                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })



                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })


                <input type="submit" value="Create" class="btn btn-primary" />





            </div>



        </div>


    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
    }
    else {
        Response.Redirect("~/Users/Loginadmin");

    }
}